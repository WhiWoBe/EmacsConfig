(((elisp org-element--headline-cache) . #s(avl-tree- [[[[[[nil nil #34=(headline (:raw-value #1="INFO" :begin 202 :end 417 :pre-blank 1 :contents-begin 212 :contents-end 416 :robust-begin 214 :robust-end 414 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 202 :title #1# :mode nil :granularity element :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 24281 :end 24282 :robust-begin 3 :robust-end 24279 :post-blank 1 :post-affiliated 1 :path "c:/Users/thmsm/.config/emacs/config.org" :mode org-data :CATEGORY "config" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #36=(headline (:raw-value #2="Setting some Environment Variables" :begin 1364 :end 1952 :pre-blank 1 :contents-begin 1402 :contents-end 1951 :robust-begin 1404 :robust-end 1949 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1364 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #35=(headline (:raw-value #4="General Settings" :begin 417 :end 1364 :pre-blank 1 :contents-begin 437 :contents-end 1362 :robust-begin 439 :robust-end 1360 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 417 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #40=(headline (:raw-value #5="Package Manager" :begin 2555 :end 3146 :pre-blank 1 :contents-begin 2574 :contents-end 3145 :robust-begin 2576 :robust-end 3143 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 2555 :title #5# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #45=(headline (:raw-value #6="Packages" :begin 3923 :end 4196 :pre-blank 0 :contents-begin 3934 :contents-end 4195 :robust-begin 3936 :robust-end 4193 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3923 :title #6# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #43=(headline (:raw-value #7="Default Programs" :begin 3146 :end 3923 :pre-blank 1 :contents-begin 3166 :contents-end 3922 :robust-begin 3168 :robust-end 3920 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 3146 :title #7# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #38=(headline (:raw-value #8="Appearance Settings (Fonts and Themes)" :begin 1952 :end 2555 :pre-blank 1 :contents-begin 1994 :contents-end 2554 :robust-begin 1996 :robust-end 2552 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1952 :title #8# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[[nil nil #46=(headline (:raw-value #9="Minibuffer" :begin 4639 :end 6849 :pre-blank 1 :contents-begin 4654 :contents-end 6848 :robust-begin 4656 :robust-end 6846 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4639 :title #9# :mode nil :granularity element :cached t :parent #12=(headline (:raw-value #10="Show file Name" :begin 4196 :end 19403 :pre-blank 1 :contents-begin 4214 :contents-end 19402 :robust-begin 4216 :robust-end 19400 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 4196 :title #10# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #50=(headline (:raw-value #11="Which-Key Shortcut Cheat Sheet" :begin 7030 :end 7199 :pre-blank 1 :contents-begin 7065 :contents-end 7198 :robust-begin 7067 :robust-end 7196 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7030 :title #11# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #49=(headline (:raw-value #13="Doom Modeline" :begin 6849 :end 7030 :pre-blank 1 :contents-begin 6867 :contents-end 7029 :robust-begin 6869 :robust-end 7027 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 6849 :title #13# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [[nil nil #17=(headline (:raw-value #14="EVIL Mode" :begin 7642 :end 8261 :pre-blank 0 :contents-begin 7655 :contents-end 8260 :robust-begin 7657 :robust-end 8258 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7642 :title #14# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [nil nil #20=(headline (:raw-value #15="Org Mode" :begin 8261 :end 18345 :pre-blank 0 :contents-begin 8273 :contents-end 18344 :robust-begin 8339 :robust-end 18342 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 8261 :ID "21e5facd-bdbf-4e9e-af73-23ce5589535c" :title #15# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #54=(headline (:raw-value #16="org-cycle in evil mode" :begin 7655 :end 8261 :pre-blank 1 :contents-begin 7688 :contents-end 8260 :robust-begin 7690 :robust-end 8258 :level 3 :priority nil :tags nil :todo-keyword #("DONE" 0 4 (wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) line-prefix #("**" 0 2 (face org-indent)) fontified nil)) :todo-type done :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7655 :title #16# :mode section :granularity element :cached t :parent #17# :org-element--cache-sync-key nil)) 0] #52=(headline (:raw-value #18="Helpful" :begin 7199 :end 7642 :pre-blank 1 :contents-begin 7211 :contents-end 7641 :robust-begin 7213 :robust-end 7639 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 7199 :title #18# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #12# 0] [[[[nil nil #59=(headline (:raw-value #19="Org Bullets" :begin 18099 :end 18345 :pre-blank 1 :contents-begin 18116 :contents-end 18344 :robust-begin 18118 :robust-end 18342 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18099 :title #19# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] [nil nil #63=(headline (:raw-value #21="MAGIT MERMAID" :begin 18773 :end 18973 :pre-blank 1 :contents-begin 18791 :contents-end 18972 :robust-begin 18793 :robust-end 18970 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18773 :title #21# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] #61=(headline (:raw-value #22="Google Calendar Import" :begin 18345 :end 18773 :pre-blank 1 :contents-begin 18372 :contents-end 18771 :robust-begin 18374 :robust-end 18769 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18345 :title #22# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [[nil nil #25=(headline (:raw-value #23="KEYBINDINGS" :begin 19403 :end 22619 :pre-blank 1 :contents-begin 19418 :contents-end 22618 :robust-begin 19420 :robust-end 22616 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19403 :title #23# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil nil #69=(headline (:raw-value #24="General.el Keybindings for Leader Keys" :begin 19574 :end 22619 :pre-blank 0 :contents-begin 19616 :contents-end 22618 :robust-begin 19618 :robust-end 22616 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19574 :title #24# :mode nil :granularity element :cached t :parent #25# :org-element--cache-sync-key nil)) 0] #68=(headline (:raw-value #26="Global" :begin 19418 :end 19574 :pre-blank 1 :contents-begin 19429 :contents-end 19573 :robust-begin 19431 :robust-end 19571 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 19418 :title #26# :mode section :granularity element :cached t :parent #25# :org-element--cache-sync-key nil)) 0] #64=(headline (:raw-value #27="Dired" :begin 18973 :end 19403 :pre-blank 1 :contents-begin 18983 :contents-end 19402 :robust-begin 18985 :robust-end 19400 :level 2 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 18973 :title #27# :mode nil :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) 0] [[nil nil #73=(headline (:raw-value #28="Littering" :begin 22884 :end 23108 :pre-blank 1 :contents-begin 22897 :contents-end 23107 :robust-begin 22899 :robust-end 23105 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22884 :title #28# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [nil [nil nil #79=(headline (:raw-value #29="Pushes to Dropbox" :begin 23683 :end 24262 :pre-blank 1 :contents-begin 23704 :contents-end 24261 :robust-begin 23706 :robust-end 24259 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23683 :title #29# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #77=(headline (:raw-value #30="AUTOTANGLE" :begin 23200 :end 23683 :pre-blank 1 :contents-begin 23214 :contents-end 23682 :robust-begin 23216 :robust-end 23680 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23200 :title #30# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 1] #75=(headline (:raw-value #31="Bookmarks" :begin 23108 :end 23200 :pre-blank 1 :contents-begin 23121 :contents-end 23199 :robust-begin 23123 :robust-end 23197 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 23108 :title #31# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 1] #71=(headline (:raw-value #32="Window Behaviour and Buffers" :begin 22619 :end 22884 :pre-blank 2 :contents-begin 22652 :contents-end 22882 :robust-begin 22654 :robust-end 22880 :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 2 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 22619 :title #32# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #58=(headline (:raw-value #33="Org Agenda" :begin 17946 :end 18099 :pre-blank 1 :contents-begin 17962 :contents-end 18098 :robust-begin 17964 :robust-end 18096 :level 3 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 1 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 17946 :title #33# :mode nil :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[[[nil nil #3# 0] [nil nil #34# 0] (section (:begin 1 :end 202 :contents-begin 1 :contents-end 201 :robust-begin 1 :robust-end 199 :post-blank 1 :post-affiliated 1 :mode first-section :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] [[nil nil #37=(section (:begin 437 :end 1364 :contents-begin 437 :contents-end 1362 :robust-begin 437 :robust-end 1360 :post-blank 2 :post-affiliated 437 :mode section :granularity element :cached t :parent #35# :org-element--cache-sync-key nil)) 0] [nil nil #36# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 437 :end 1364 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (server-start) \12  (setq inhibit-startup-message t)\12\12  ;; WINDOW\12  (scroll-bar-mode -1) ;show scroll bars\12  (set-fringe-mode 0) ;added window border\12  (menu-bar-mode -1) ; top menu bar\12  (tool-bar-mode -1)\12  ;; (tooltip mode -1)\12\12  (setq visible-bell t)\12\12  ;; Scroll\12  ;; (pixel-scroll-precision-mode)\12\12  ;; Line Numbers\12  (global-display-line-numbers-mode 1)\12  (menu-bar--display-line-numbers-mode-relative)\12  ;; (display-line-numbers-type 'relative)\12  (global-hl-line-mode 1)\12\12  ;; History\12\12  (setq history-length 25)\12  (savehist-mode 1)\12\12  (setq recentf-max-saved-items 25)\12  (recentf-mode 1)\12\12  ;; Auto update buffers\12  (global-auto-revert-mode)\12\12  ;; Frame Parameters\12\12  (set-frame-parameter nil 'internal-border-width 20)\12  (set-frame-parameter nil 'alpha-background 70)\12\12  ;; (add-to-list 'default-frame-alist '(width  . 100))\12  ;; (add-to-list 'default-frame-alist '(height . 40))\12\12" :post-blank 2 :post-affiliated 437 :mode planning :granularity element :cached t :parent #37# :org-element--cache-sync-key nil)) 0] #35# 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 1402 :end 1952 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12   ;; (defvar my/org-dir-files \"d:/worg\")\12   ;; (defvar my/org-agenda-files \"/mnt/d/notebooks/DemacsNotes/org/Capture.org\")\12   ;; (setq my-org-capture-template-target \"/mnt/d/notebooks/DemacsNotes/org/Capture.org\")\12   ;; (defvar my/backup-directory \"d:/worg/.data/backups/\")\12   ;; (defvar my/org-templates \"d:/worg/.templates\")\12   (defvar my/bookmarks \"d:/worg/.data/win_bookmarks\")\12   (defvar my/org-id-locations-file \"d:/worg/.data/.org-id-locations\")\12   (defvar my/trash-directory \"~/.config/emacs/tmp/trash\")\12\12" :post-blank 1 :post-affiliated 1402 :mode planning :granularity element :cached t :parent #41=(section (:begin 1402 :end 1952 :contents-begin 1402 :contents-end 1951 :robust-begin 1402 :robust-end 1949 :post-blank 1 :post-affiliated 1402 :mode section :granularity element :cached t :parent #36# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #39=(section (:begin 1994 :end 2555 :contents-begin 1994 :contents-end 2554 :robust-begin 1994 :robust-end 2552 :post-blank 1 :post-affiliated 1994 :mode section :granularity element :cached t :parent #38# :org-element--cache-sync-key nil)) 0] #38# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2035 :end 2555 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12   ;; Font Settings\12   (set-face-attribute 'default nil :font \"FiraCode Nerd Font\" :height 160)\12\12   ;; Theme Settings\12   (setq modus-themes-region'(bg-only))\12   (setq modus-themes-mode-line '(accented borderless padded))\12   (setq modus-themes-org-blocks 'gray-background)\12   (load-theme 'modus-vivendi t)\12\12\12  ;; Icons\12  (use-package all-the-icons\12  :if (display-graphic-p))\12\12  ;; (use-package kaolin-themes\12  ;; :config\12  ;; (load-theme 'kaolin-dark t)\12  ;; (kaolin-treemacs-theme))\12\12" :post-blank 1 :post-affiliated 2035 :mode nil :granularity element :cached t :parent #39# :org-element--cache-sync-key nil)) 0] [nil nil #42=(section (:begin 2574 :end 3146 :contents-begin 2574 :contents-end 3145 :robust-begin 2574 :robust-end 3143 :post-blank 1 :post-affiliated 2574 :mode section :granularity element :cached t :parent #40# :org-element--cache-sync-key nil)) 0] #40# 0] (paragraph (:begin 1994 :end 2035 :contents-begin 1994 :contents-end 2034 :post-blank 1 :post-affiliated 1994 :mode planning :granularity element :cached t :parent #39# :org-element--cache-sync-key nil)) 0] #41# 0] [[[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 2626 :end 3146 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; TANGLE\12  (require 'package)\12\12  ;; Package Sources\12  (setq package-archives '((\"melpa\" . \"https://melpa.org/packages/\")\12\11\11\11   (\"org\" . \"https://orgmode.org/elpa/\")\12\11\11\11   (\"elpa\" . \"https://elpa.gnu.org/packages/\")))\12\12  (package-initialize)\12  (unless package-archive-contents\12    (package-refresh-contents))\12\12  ;; Initialize use-package\12  (unless (package-installed-p 'use-package)\12    (package-install 'use-package))\12\12  (require 'use-package)\12  (setq use-package-always-ensure t)\12\12" :post-blank 1 :post-affiliated 2626 :mode nil :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] [nil nil #44=(section (:begin 3166 :end 3923 :contents-begin 3166 :contents-end 3922 :robust-begin 3166 :robust-end 3920 :post-blank 1 :post-affiliated 3166 :mode section :granularity element :cached t :parent #43# :org-element--cache-sync-key nil)) 0] #43# 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 3461 :end 3923 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12     ;; DEFAULT BROWSER\12     (setq browse-url-browser-function 'browse-url-generic       browse-url-generic-program \"/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe\")\12\12  (setq org-file-apps\12     '((\"\\\\.docx\\\\'\" . default)\12       (\"\\\\.mm\\\\'\" . default)\12       (\"\\\\.x?html?\\\\'\" . default)\12       (\"\\\\.pdf\\\\'\" . \"/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe %s\")\12       (auto-mode . emacs)))\12\12" :post-blank 1 :post-affiliated 3461 :mode nil :granularity element :cached t :parent #44# :org-element--cache-sync-key nil)) 0] [nil nil #12# 0] #45# 0] (paragraph (:begin 3166 :end 3461 :contents-begin 3166 :contents-end 3460 :post-blank 1 :post-affiliated 3166 :mode planning :granularity element :cached t :parent #44# :org-element--cache-sync-key nil)) 0] [[[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 4214 :end 4639 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq frame-title-format\12        (list (format \"%s %%S: %%j \" (system-name))\12              '(buffer-file-name \"%f\" (dired-directory dired-directory \"%b\"))))\12\12  (defun my/clip-path-to-current-location ()\12    \"Show the full path file name in the minibuffer.\"\12    (interactive)\12    (kill-new (buffer-file-name)))\12\12 ;; (global-set-key [C-f1] 'show-file-name) ; Or any other key you want\12\12\12" :post-blank 2 :post-affiliated 4214 :mode planning :granularity element :cached t :parent #48=(section (:begin 4214 :end 4639 :contents-begin 4214 :contents-end 4637 :robust-begin 4214 :robust-end 4635 :post-blank 2 :post-affiliated 4214 :mode section :granularity element :cached t :parent #12# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #47=(section (:begin 4654 :end 6849 :contents-begin 4654 :contents-end 6848 :robust-begin 4654 :robust-end 6846 :post-blank 1 :post-affiliated 4654 :mode section :granularity element :cached t :parent #46# :org-element--cache-sync-key nil)) 0] #46# 0] [[nil nil (plain-list (:type unordered :begin 4708 :end 5009 :contents-begin 4708 :contents-end 5009 :structure ((4708 0 "- " nil nil nil 4838) (4838 0 "- " nil nil nil 5009)) :post-blank 0 :post-affiliated 4708 :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 5088 :end 6849 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (fido-vertical-mode)\12\12  ;; Vertico\12\12  (use-package vertico\12    :init\12    (vertico-mode)\12\12    ;; Different scroll margin\12    ;; (setq vertico-scroll-margin 0)\12\12    ;; Show more candidates\12    ;; (setq vertico-count 20)\12\12    ;; Grow and shrink the Vertico minibuffer\12    ;; (setq vertico-resize t)\12\12    ;; Optionally enable cycling for `vertico-next' and `vertico-previous'.\12    ;; (setq vertico-cycle t)\12    ) \12  (setq minibuffer-prompt-properties\12        '(read-only t cursor-intangible t face minibuffer-prompt))\12  (add-hook 'minibuffer-setup-hook #'cursor-intangible-mode)\12\12  (setq enable-recursive-minibuffers t) ;;enables commands like M-x when in minibuffer\12\12  ;; Orderless\12\12  (use-package orderless\12    :init\12    ;; Configure a custom style dispatcher (see the Consult wiki)\12    ;; (setq orderless-style-dispatchers '(+orderless-consult-dispatch orderless-affix-dispatch)\12    ;;       orderless-component-separator #'orderless-escapable-split-on-space)\12    (setq completion-styles '(orderless basic)\12          completion-category-defaults nil\12          completion-category-overrides '((file (styles partial-completion)))))\12\12  ;; Enable rich annotations using the Marginalia package\12  (use-package marginalia\12    ;; Bind `marginalia-cycle' locally in the minibuffer.  To make the binding\12    ;; available in the *Completions* buffer, add it to the\12    ;; `completion-list-mode-map'.\12    :bind (:map minibuffer-local-map\12                (\"M-A\" . marginalia-cycle))\12    ;; The :init section is always executed.\12    :init\12    ;; Marginalia must be activated in the :init section of use-package such that\12    ;; the mode gets enabled right away. Note that this forces loading the\12    ;; package.\12    (marginalia-mode))\12\12" :post-blank 1 :post-affiliated 5088 :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 5009 :end 5088 :contents-begin 5009 :contents-end 5087 :post-blank 1 :post-affiliated 5009 :mode nil :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 4654 :end 4708 :contents-begin 4654 :contents-end 4708 :post-blank 0 :post-affiliated 4654 :mode planning :granularity element :cached t :parent #47# :org-element--cache-sync-key nil)) 0] #48# 0] (paragraph (:begin 2574 :end 2626 :contents-begin 2574 :contents-end 2625 :post-blank 1 :post-affiliated 2574 :mode planning :granularity element :cached t :parent #42# :org-element--cache-sync-key nil)) 0] [[[[[[nil nil #51=(section (:begin 6867 :end 7030 :contents-begin 6867 :contents-end 7029 :robust-begin 6867 :robust-end 7027 :post-blank 1 :post-affiliated 6867 :mode section :granularity element :cached t :parent #49# :org-element--cache-sync-key nil)) 0] [nil nil #50# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 6867 :end 7030 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (use-package doom-modeline\12  ;;   :ensure t\12  ;;   :init (doom-modeline-mode 1)\12  ;;   :custom (doom-modeline-height 15))\12\12" :post-blank 1 :post-affiliated 6867 :mode planning :granularity element :cached t :parent #51# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7065 :end 7199 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package which-key\12    :init (which-key-mode)\12    :config (setq which-key-idle-delay 0.05))\12\12" :post-blank 1 :post-affiliated 7065 :mode planning :granularity element :cached t :parent #53=(section (:begin 7065 :end 7199 :contents-begin 7065 :contents-end 7198 :robust-begin 7065 :robust-end 7196 :post-blank 1 :post-affiliated 7065 :mode section :granularity element :cached t :parent #50# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #57=(section (:begin 7211 :end 7642 :contents-begin 7211 :contents-end 7641 :robust-begin 7211 :robust-end 7639 :post-blank 1 :post-affiliated 7211 :mode section :granularity element :cached t :parent #52# :org-element--cache-sync-key nil)) 0] #52# 0] #53# 0] [[[nil nil #17# 0] [nil nil #56=(section (:begin 7688 :end 8261 :contents-begin 7688 :contents-end 8260 :robust-begin 7688 :robust-end 8258 :post-blank 1 :post-affiliated 7688 :mode section :granularity element :cached t :parent #54# :org-element--cache-sync-key nil)) 0] #54# 0] [[nil nil #20# 0] [nil nil (property-drawer (:begin 8273 :end 8341 :contents-begin 8286 :contents-end 8334 :post-blank 1 :post-affiliated 8273 :mode planning :granularity element :cached t :parent #55=(section (:begin 8273 :end 17946 :contents-begin 8273 :contents-end 17945 :robust-begin 8273 :robust-end 17943 :post-blank 1 :post-affiliated 8273 :mode section :granularity element :cached t :parent #20# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #55# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7688 :end 8261 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package evil\12    :init\12    (setq evil-want-integration t)\12    ;;    (setq evil-want-C-i-jump nil) ;; disables Jumplist binding so you can TAB in Normal mode in Org mode \12    (setq evil-want-C-u-scroll t)\12    (setq evil-want-C-d-scroll t)\12    (setq evil-want-keybinding nil)\12    (setq evil-vsplit-window-right t)\12    (setq evil-split-window-below t)\12    (evil-mode))\12\12  (use-package evil-collection\12    :after evil\12    :config\12    (setq evil-collection-mode-list '(dashboard dired org vertico ibuffer))\12    (evil-collection-init))\12\12" :post-blank 1 :post-affiliated 7688 :mode planning :granularity element :cached t :parent #56# :org-element--cache-sync-key nil)) 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 7211 :end 7642 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (use-package helpful\12  ;;  :custom\12  ;;  (counsel-describe-function-function #'helpful-callable)\12  ;;  (counsel-describe-variable-function #'helpful-variable)\12  ;;  :bind\12  ;;  ([remap describe-function] . counsel-describe-function)\12  ;;  ([remap describe-command] . helpful-command)\12  ;;  ([remap describe-variable] . counsel-describe-variable)\12  ;;  ([remap describe-key] . helpful-key))\12\12" :post-blank 1 :post-affiliated 7211 :mode planning :granularity element :cached t :parent #57# :org-element--cache-sync-key nil)) 0] [[[[nil nil (paragraph (:begin 8414 :end 8690 :contents-begin 8414 :contents-end 8689 :post-blank 1 :post-affiliated 8414 :mode nil :granularity element :cached t :parent #55# :org-element--cache-sync-key nil)) 0] [nil nil #58# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 8690 :end 17946 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; Diable Line \12  (defun my-display-numbers-hook ()\12    (display-line-numbers-mode 0))\12\12  (add-hook 'org-mode-hook 'my-display-numbers-hook)\12\12  (defun tmi/org-mode-setup ()\12    (org-indent-mode)\12    (setq evil-auto-indent t))\12\12  (defun my/org-unschedule ()\12    (interactive)\12    (let ((current-prefix-arg '(4))) ;; emulate C-u\12      (call-interactively 'org-schedule))) ;; invoke align-regexp interactivel\12\12  ;; (defun my/org-todo-insert-comment ()\12  ;;       (interactive)\12  ;;       (let ((current-prefix-arg '(4))) ;; emulate C-u\12  ;;         (call-interactively 'org-todo))) ;; invoke align-regexp interactively\12\12  ;; when calling capture or store-link it creates a link\12  ;; when jounrnal-capture is called it doesnt create an id.\12  ;; this means a specific related task creates an ID a jounal entry for later\12  ;; processing does not.\12\12  (defun my/capture-without-id-at-point()\12    (interactive)\12    (let ((org-id-link-to-org-use-id 'create-if-interactive-and-no-custom-id))\12      (org-capture nil)\12      ))\12\12  (defun my/journal-capture-without-id-at-point()\12    (interactive)\12    (let ((org-id-link-to-org-use-id 'create-if-interactive-and-no-custom-id))\12      (org-capture nil \"j\")\12      ))\12\12  (defun my/journal-outline-capture-without-id-at-point()\12    (interactive)\12    (let ((org-id-link-to-org-use-id 'create-if-interactive-and-no-custom-id))\12      (org-capture nil \"J\")\12      ))\12\12  ;; (defun my/capture-journal-without-id()\12  ;;   (org-capture nil))\12\12  (use-package org\12    :pin org\12    :commands (org-capture org-agenda)\12    :hook (org-mode . tmi/org-mode-setup)\12    :config\12    (setq org-directory-files '(\"d:/worg/\")) ;;Default location of Org files\12    (setq org-agenda-files '(\"d:/worg/Tasks.org\" \"d:/worg/Meetings.org\")) ;;org agenda searches in this file or dir for todo items\12    (setq org-ellipsis \" +\")\12    (setq org-return-follows-link t)\12    (setq org-log-done 'time) ;; timestamp on done\12    (setq org-log-into-drawer t)\12    (setq org-startup-folded nil)\12\12    ;; Setup org-id\12\12    (require 'org-id)\12    (setq org-id-link-to-org-use-id t)\12    ;; (org-id-method) \12    (setq org-id-locations-file my/org-id-locations-file) ;; set where id's are stored\12\12    ;;Set Faces\12\12    (custom-set-faces\12     '(org-level-1 ((t (:inherit outline-1 :height 1.3))))\12     '(org-level-2 ((t (:inherit outline-2 :height 1.2))))\12     '(org-level-3 ((t (:inherit outline-3 :height 1.1))))\12     '(org-level-4 ((t (:inherit outline-4 :height 1.0))))\12     '(org-level-5 ((t (:inherit outline-5 :height 0.9))))\12     '(org-block ((t (:family \"Fira Code Mono\"  :height 1.0))))\12     )\12\12    ;; Org Capture Templates\12\12    (setq org-capture-templates\12          `((\"t\" \"Tasks\" entry (file+headline \"d:/worg/Tasks.org\" \"Inbox\")\12             (file \"d:/worg/.templates/Task_Template.org\")\12             :prepend t\12             :jump-to-captured t\12             :empty-lines-after 1\12             :empty-lines-before 1\12             )\12\12            (\"m\" \"Meeting\" entry (file+headline \"d:/worg/Meetings.org\" \"Meeting Notes\")\12             (file \"d:/worg/.templates/Meeting_Template.org\")\12             :prepend t\12             :jump-to-captured t\12             :empty-lines-after 1\12             :empty-lines-before 1\12             :time-prompt 1\12             )\12\12            (\"j\" \"Journal Log\" plain (file+function \"d:/worg/Journal.org\"\12                                                    (lambda ()\12                                                      (org-datetree-find-date-create\12                                                       (org-date-to-gregorian (org-today)) t)\12                                                      (re-search-forward \"^\\\\*.+ Log\" nil t)))\12             (file \"d:/worg/.templates/Journal_Template.org\")\12             :prepend nil\12             :jump-to-captured nil\12             :empty-lines-before 1\12             :empty-lines-after 1\12             )\12\12            (\"J\" \"Journal Outline\" entry (file+olp+datetree \"d:/worg/Journal.org\" \"Journal\")\12             (file \"d:/worg/.templates/Journal_Outline_Template.org\")\12             :prepend nil\12             :jump-to-captured t\12             :immediate-finish t\12             :empty-lines-before 0\12             :empty-lines-after 0\12             )\12\12            )\12\12          ;; Org global TODO States\12          ;; (setq org-todo-keywords\12          ;;\11'((sequence \"TODO\" \"FEEDBACK\" \"VERIFY\" \"|\" \"DONE\" \"DELEGATED\")))\12          ))\12\12  ;; Org Refile\12\12  (setq org-refile-targets\12        (quote((\"d:/worg/Tasks.org\" :maxlevel . 1)\12               (\"d:/worg/Meetings.org\" :maxlevel . 1)\12               (\"d:/worg/org_capture.org\" :maxlevel . 1))))\12\12\12  (setq org-refile-use-outline-path nil)\12  (setq org-refile-allow-creating-parent-nodes t)\12  (setq org-outline-path-complete-in-steps nil)\12\12\12  ;; Org Agenda\12\12  (setq org-agenda-custom-commands\12        '(\12\12          (\",\" \"Dayliy Overview\"\12           (\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-start-day \"-1d\")\12                     (org-agenda-span 1)\12                     (org-agenda-repeating-timestamp-show-all t)\12                     (org-agenda-entry-types '(:timestamp :sexp :scheduled))\12                     (org-agenda-overriding-header \"\\n* Yesterday *\\n\")))\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-span 1)\12                     (org-agenda-repeating-timestamp-show-all t)\12                     (org-agenda-entry-types '(:timestamp :sexp :scheduled))\12                     (org-agenda-overriding-header \"\\n* Today *\\n\")))\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-entry-types '(:deadline))\12                     (org-deadline-warning-days 7)\12                     (org-agenda-overriding-header \"\\n* Deadlines *\\n\")))\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-start-day \"+1d\")\12                     (org-agenda-span 3)\12                     (org-agenda-repeating-timestamp-show-all t)\12                     (org-agenda-entry-types '(:timestamp :sexp :scheduled))\12                     (org-agenda-overriding-header \"\\n* Next *\\n\")))\12\12            (todo \"WAIT\"\12                  ((org-agenda-overriding-header \"* Waiting on *\\n\")))\12\12            (todo \"ACT\"\12                  ((org-agenda-block-separator nil)\12                   (org-agenda-skip-function '(org-agenda-skip-if nil '(timestamp)))\12                   (org-agenda-overriding-header \"\\n* Open Tasks *\\n\")))\12\12            (todo \"DELIGATED\"\12                  ((org-agenda-block-separator nil)\12                   (org-agenda-skip-function '(org-agenda-skip-if nil '(timestamp)))\12                   (org-agenda-overriding-header \"\\n* Monitor *\\n\")))\12\12            ))\12\12\12          (\".\" \"Weekly Overview\"\12           (\12\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-span 7)\12                     (org-agenda-start-on-weekday 0)\12                     (org-agenda-repeating-timestamp-show-all t)\12                     (org-agenda-entry-types '(:timestamp :sexp :scheduled))\12                     (org-agenda-overriding-header \"\\n* Week *\\n\")))\12\12            (agenda \"\"\12                    ((org-agenda-block-separator nil)\12                     (org-agenda-entry-types '(:deadline))\12                     (org-deadline-warning-days 14)\12                     (org-agenda-overriding-header \"\\n* deadlines *\\n\")))\12\12            (todo \"WAIT\"\12                  ((org-agenda-overriding-header \"* Waiting on *\\n\")))\12\12            (todo \"ACT\"\12                  ((org-agenda-block-separator nil)\12                   (org-agenda-skip-function '(org-agenda-skip-if nil '(timestamp)))\12                   (org-agenda-overriding-header \"\\n* Open Tasks *\\n\")))\12\12            (todo \"DELIGATED\"\12                  ((org-agenda-block-separator nil)\12                   (org-agenda-skip-function '(org-agenda-skip-if nil '(timestamp)))\12                   (org-agenda-overriding-header \"\\n* Monitor *\\n\")))\12\12            ))\12\12\12          ))\12\12  (defun my/org-agenda-inactive ()\12    (interactive)\12    (let ((org-agenda-include-inactive-timestamps t))\12      (org-agenda)))\12\12  (setq org-agenda-ignore-properties '(effort appt stats category))\12  (setq org-agenda-todo-ignore-scheduled nil)\12  (setq org-agenda-todo-list-sublevels t)\12  (setq org-agenda-use-tag-inheritance nil)\12\12\12  (setq org-todo-keyword-faces\12        '(\12          (\"ACT\" . (:foreground \"#cd5c60\" :weight bold))\12          (\"WAIT\" . (:foreground \"yellow\"))\12          (\"READ\" . (:foreground))\12\12          (\"DELIGATED\" . (:foreground \"lightblue\"))\12          (\"DONE\" . (:foreground))\12          (\"CANCELED\" . (:foreground \"blue\" :weight bold))\12          ))\12\12\12  ;;(org-id-get-with-outline-path-completion)\12  ;; (defun my/org-add-ids-to-headlines-in-file ()\12  ;;   \"Add ID properties to all headlines in the current file which\12  ;; do not already have one.\"\12  ;;   (interactive)\12  ;;   (org-map-entries 'org-id-get-create))\12\12  ;; (add-hook 'org-mode-hook\12  ;;           (lambda ()\12  ;;             (add-hook 'before-save-hook 'my/org-add-ids-to-headlines-in-file nil 'local)))\12\12  ;; (add-hook 'org-mode-hook 'org-indent-mode)\12\12" :post-blank 1 :post-affiliated 8690 :mode nil :granularity element :cached t :parent #55# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 17962 :end 18099 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq org-agenda-window-setup 'reorganize-frame) \12  (setq org-agenda-restore-windows-after-quit t)\12\12" :post-blank 1 :post-affiliated 17962 :mode planning :granularity element :cached t :parent #60=(section (:begin 17962 :end 18099 :contents-begin 17962 :contents-end 18098 :robust-begin 17962 :robust-end 18096 :post-blank 1 :post-affiliated 17962 :mode section :granularity element :cached t :parent #58# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #66=(section (:begin 18116 :end 18345 :contents-begin 18116 :contents-end 18344 :robust-begin 18116 :robust-end 18342 :post-blank 1 :post-affiliated 18116 :mode section :granularity element :cached t :parent #59# :org-element--cache-sync-key nil)) 0] #59# 0] #60# 0] [[[nil nil #61# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18372 :end 18773 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (require 'icalendar)\12\12  (setq diary-file \"d:/worg/cal.org\")\12  (setq calendar-mark-diary-entries-flag t)\12  (add-to-list 'auto-mode-alist '(\"\\\\diary\\\\'\" . diary-mode))\12  (setq diary-comment-start \";;\")\12  (setq diary-comment-end \"\")\12  (setq org-agenda-include-diary t)\12  (add-hook 'diary-mode-hook 'real-auto-save-mode)\12  (add-hook 'diary-mode-hook #'abbrev-mode) \12\12" :post-blank 2 :post-affiliated 18372 :mode planning :granularity element :cached t :parent #62=(section (:begin 18372 :end 18773 :contents-begin 18372 :contents-end 18771 :robust-begin 18372 :robust-end 18769 :post-blank 2 :post-affiliated 18372 :mode section :granularity element :cached t :parent #61# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #62# 0] [[nil nil #65=(section (:begin 18791 :end 18973 :contents-begin 18791 :contents-end 18972 :robust-begin 18791 :robust-end 18970 :post-blank 1 :post-affiliated 18791 :mode section :granularity element :cached t :parent #63# :org-element--cache-sync-key nil)) 0] [nil nil #64# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18791 :end 18973 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package magit\12    :ensure t)\12\12  (use-package ob-mermaid\12    :ensure t)\12  ;; (setq ob-mermaid-cli-path \"~/mermaid/node_modules/.bin/mmdc\")\12\12\12" :post-blank 1 :post-affiliated 18791 :mode planning :granularity element :cached t :parent #65# :org-element--cache-sync-key nil)) 0] #63# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 18116 :end 18345 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package org-bullets\12    :after org\12    :config\12    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))\12    :custom\12    (org-bullets-bullet-list '(\"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\"))) \12\12\12" :post-blank 1 :post-affiliated 18116 :mode planning :granularity element :cached t :parent #66# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 8341 :end 8414 :contents-begin 8341 :contents-end 8413 :post-blank 1 :post-affiliated 8341 :mode nil :granularity element :cached t :parent #55# :org-element--cache-sync-key nil)) 0] [[[[[nil nil (paragraph (:begin 18983 :end 19016 :contents-begin 18983 :contents-end 19015 :post-blank 1 :post-affiliated 18983 :mode planning :granularity element :cached t :parent #67=(section (:begin 18983 :end 19403 :contents-begin 18983 :contents-end 19402 :robust-begin 18983 :robust-end 19400 :post-blank 1 :post-affiliated 18983 :mode section :granularity element :cached t :parent #64# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #25# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19016 :end 19403 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package dired\12    :ensure nil\12    :commands (dired dired-jump)\12    :custom ((dired-listing-switches \"-agho --group-directories-first\"))\12    :config\12    (evil-collection-define-key 'normal 'dired-mode-map\12      \"h\" 'dired-up-directory\12      \"l\" 'dired-find-file))\12  (setq delete-by-moving-to-trash t)\12  (setq trash-directory my/trash-directory)\12\12" :post-blank 1 :post-affiliated 19016 :mode nil :granularity element :cached t :parent #67# :org-element--cache-sync-key nil)) 0] [[nil nil #70=(section (:begin 19429 :end 19574 :contents-begin 19429 :contents-end 19573 :robust-begin 19429 :robust-end 19571 :post-blank 1 :post-affiliated 19429 :mode section :granularity element :cached t :parent #68# :org-element--cache-sync-key nil)) 0] [nil nil #69# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19429 :end 19574 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (global-set-key (kbd \"<escape>\") 'keyboard-escape-quit)\12  (keymap-global-unset \"C-k\") ; unset kill line\12\12" :post-blank 1 :post-affiliated 19429 :mode planning :granularity element :cached t :parent #70# :org-element--cache-sync-key nil)) 0] #68# 0] [[[nil nil (paragraph (:begin 19616 :end 19665 :contents-begin 19616 :contents-end 19664 :post-blank 1 :post-affiliated 19616 :mode planning :granularity element :cached t :parent #72=(section (:begin 19616 :end 22619 :contents-begin 19616 :contents-end 22618 :robust-begin 19616 :robust-end 22616 :post-blank 1 :post-affiliated 19616 :mode section :granularity element :cached t :parent #69# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #71# 0] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 19665 :end 22619 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (use-package general\12    :config\12    (general-evil-setup)\12\12    ;; set up 'SPC' as the global leader key\12    (general-create-definer tmi/leader-keys\12      :states '(normal insert visual emacs)\12      :keymaps 'override\12      :prefix \"SPC\" ;; set leader\12      :global-prefix  \"M-SPC\") ;; access leader in insert mode\12\12    (tmi/leader-keys\12      \":\" '(execute-extended-command :wk \"M-x\")\12\12      \"f\" '(:ignore t :wk \"Files\")\12      \"f f\" '(find-file :wk \"Find file\")\12      \"f c\" '((lambda () (interactive)\12                (find-file \"~/.config/emacs/config.org\")) \12              :wk \"Open config.org\")\12      \"f r\" '(recentf-open :wk \"Recent Files\")\12\12      \"TAB TAB\" '(comment-line :wk \"Comment lines\")\12\12      \"B\" '(:ignore t :wk \"bookmarks\")\12      \"B b\" '(list-bookmarks :wk \"List bookmarks\")\12      \"B s\" '(bookmark-set :wk \"Set bookmarks\")\12      \"B S\" '(bookmark-save :wk \"Save bookmarks\")\12\12      \"b\" '(:ignore t :wk \"buffer\")\12      \"b b\" '(switch-to-buffer :wk \"switch buffer\")\12      \"b i\" '(ibuffer :wk \"ibuffer\")\12      \"b p\" '(previous-buffer :wk \"<- buffer\")\12      \"b n\" '(next-buffer :wk \"buffer ->\")\12      \"b k\" '(kill-buffer :wk \"kill buffer\")\12\12\12      \"u\" '(universal-argument :wk \"u-arg\")\12      \"q\" '(exit-minibuffer :wk \"Exit minib\")\12\12      \"h\" '(:ignore t :wk \"help\")\12      \"h r r\" '((lambda () (interactive)\12                  (load-file \"~/.config/emacs/init.el\"))\12                :wk \"Reload emacs config\")\12\12      \"d\" '(:ignore t :wk \"Dired\")\12      \"d d\" '(dired :wk \"Dired\")\12      \"d D\" '(dired-other-window :wk \"Dired other Window\")\12\12      \"w\" '(:ignore t :wk \"window\")\12      \"w w\"'(other-window :wk \"switch window\")\12      \"w q\"'(quit-window :wk \"close window\")\12      \"w o\" '(delete-other-windows :wk \"delete other window\")\12      \"w v\" '(split-window-right :wk \"split vertical\")\12\12      \"e\" '(:ignore t :wk \"eval\")\12      \"e r\" '(eval-region :wk \"eval-r\")\12      \"e b\" '(eval-buffer :wk \"eval-b\")\12\12      \"o\" '(:ignore t :wk \"org\")\12      \"o a\" '(org-agenda :wk \"Agenda\")\12      \"o A\" '(my/org-agenda-inactive :wk \"Agenda TS\")\12      \"o c\" '(org-capture :wk \"Capture\")\12      \"o C\" '(my/capture-without-id-at-point :wk \"Capture without ID\")\12      \"o d\" '(org-deadline :wk \"Deadline\")\12      \"o i\" '(org-insert-last-stored-link :wk \"Insert Link\")\12      \"o I\" '(org-insert-link :wk \"Insert selected Link\")\12      \"o j\" '(my/journal-capture-without-id-at-point :wk \"Journal Entry\")\12      \"o J\" '(my/journal-outline-capture-without-id-at-point :wk \"Journal Outline\")\12      \"o l\" '(org-store-link :wk \"Store Link\")\12      \"o n\" '(org-add-note :wk \"add note to current entry\")\12      \"o o\" '(org-open-at-point :wk \"open link\")\12      \"o s\" '(org-schedule :wk \"Schedule\")\12      \"o t\" '(org-set-tags-command :wk \"Tags set/edit\")\12      \"o u\" '(my/org-unschedule :wk \"Unschedule\")\12\12      ;; \"o k\" '(my/org-todo-insert-comment :wk \"Comment TODO item\")\12      \"o ,\" '(org-cycle-agenda-files :wk \"cycle agenda files\")\12\12      )\12    )\12\12\12" :post-blank 1 :post-affiliated 19665 :mode nil :granularity element :cached t :parent #72# :org-element--cache-sync-key nil)) 0] [[nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22652 :end 22884 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  ;; (setq display-buffer-base-action\12  ;; '((display-buffer-reuse-window\12  ;;    display-buffer-reuse-mode-window\12  ;;    display-buffer-same-window\12  ;;    display-buffer-in-previous-window)))\12\12" :post-blank 2 :post-affiliated 22652 :mode planning :granularity element :cached t :parent #74=(section (:begin 22652 :end 22884 :contents-begin 22652 :contents-end 22882 :robust-begin 22652 :robust-end 22880 :post-blank 2 :post-affiliated 22652 :mode section :granularity element :cached t :parent #71# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #81=(section (:begin 22897 :end 23108 :contents-begin 22897 :contents-end 23107 :robust-begin 22897 :robust-end 23105 :post-blank 1 :post-affiliated 22897 :mode section :granularity element :cached t :parent #73# :org-element--cache-sync-key nil)) 0] #73# 0] #74# 0] #72# 0] [[[nil nil #75# 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23121 :end 23200 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12 (setq bookmark-default-file my/bookmarks)\12\12" :post-blank 1 :post-affiliated 23121 :mode planning :granularity element :cached t :parent #76=(section (:begin 23121 :end 23200 :contents-begin 23121 :contents-end 23199 :robust-begin 23121 :robust-end 23197 :post-blank 1 :post-affiliated 23121 :mode section :granularity element :cached t :parent #75# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #76# 0] [[[nil nil #78=(section (:begin 23214 :end 23683 :contents-begin 23214 :contents-end 23682 :robust-begin 23214 :robust-end 23680 :post-blank 1 :post-affiliated 23214 :mode section :granularity element :cached t :parent #77# :org-element--cache-sync-key nil)) 0] [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23252 :end 23683 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun my/org-babel-tangle-config ()\12    (when (string-equal (file-name-directory (buffer-file-name))\12                        (expand-file-name user-emacs-directory))\12      ;; Dynamic scoping to the rescue\12      (let ((org-confirm-babel-evaluate nil))\12        (org-babel-tangle))\12      )\12    ) \12\12  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'my/org-babel-tangle-config)))\12\12" :post-blank 1 :post-affiliated 23252 :mode nil :granularity element :cached t :parent #78# :org-element--cache-sync-key nil)) 0] (paragraph (:begin 23214 :end 23252 :contents-begin 23214 :contents-end 23251 :post-blank 1 :post-affiliated 23214 :mode planning :granularity element :cached t :parent #78# :org-element--cache-sync-key nil)) 0] [nil [nil nil (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 23704 :end 24262 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (defun my/push-to-drop ()\12    (interactive)\12\12    (when (string-equal (buffer-file-name) \"d:/worg/Tasks.org\")\12      ;; Dynamic scoping to the rescue\12      (write-region nil nil \"/mnt/d/Dropbox/Dropbox/org/Tasks_wr.org\" nil nil nil nil))\12\12    (when (string-equal (buffer-file-name) \"d:/worg/Journal.org\")\12      ;; Dynamic scoping to the rescue\12      (write-region nil nil \"/mnt/d/Dropbox/Dropbox/org/Journal_wr.org\" nil nil nil nil)))\12\12  (add-hook 'org-mode-hook (lambda () (add-hook 'after-save-hook #'my/push-to-drop)))\12\12" :post-blank 1 :post-affiliated 23704 :mode planning :granularity element :cached t :parent #80=(section (:begin 23704 :end 24262 :contents-begin 23704 :contents-end 24261 :robust-begin 23704 :robust-end 24259 :post-blank 1 :post-affiliated 23704 :mode section :granularity element :cached t :parent #79# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #80# 1] #79# 0] #77# 1] (src-block (:language "emacs-lisp" :switches nil :parameters nil :begin 22897 :end 23108 :number-lines nil :preserve-indent nil :retain-labels t :use-labels t :label-fmt nil :value "\12  (setq backup-directory-alist\12        '((\".*\" . \"~/.config/emacs/tmp/backups/\")))\12  (setq auto-save-file-name-transforms\12        `((\".*\" ,\"~/.config/emacs/tmp/backups/\" t)))\12\12" :post-blank 1 :post-affiliated 22897 :mode planning :granularity element :cached t :parent #81# :org-element--cache-sync-key nil)) 0] #67# 0] #49# 1] nil nil 0] org-element--cache-compare)))